name: Okta Device Authenticator 

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  SampleApp:
    runs-on: macos-12
    steps:
    - uses: actions/checkout@v2
    - name: install pod
      run: cd Examples/PushSampleApp; pod install   
    - name: iOS Push Sample App
      run: set -o pipefail && xcodebuild -workspace ./Examples/PushSampleApp/SampleApp.xcworkspace -scheme "SampleApp" -destination "platform=iOS Simulator,OS=latest,name=iPhone 12" clean build
  UnitTests:
    runs-on: macos-12
    steps:
    - uses: actions/checkout@v2
    - name: Install pod
      run: pod install
    - name: Unit Tests
      run: set -o pipefail && xcodebuild -workspace DeviceAuthenticator.xcworkspace -scheme "DeviceAuthenticatorUnitTests" -destination "platform=iOS Simulator,OS=latest,name=iPhone 12" test | xcpretty
  FunctionalTests:
    runs-on: macos-12
    steps:
    - uses: actions/checkout@v2
    - name: Install pod
      run: pod install
    - name: Functional Tests
      run: set -o pipefail && xcodebuild -workspace DeviceAuthenticator.xcworkspace -scheme "DeviceAuthenticatorFunctionalTests" -destination "platform=iOS Simulator,OS=latest,name=iPhone 12" test | xcpretty
  CodeCoverage:
    runs-on: macos-12
    steps:
    - name: Checkout project
      uses: actions/checkout@v2
    - name: Install xcov
      run: gem install xcov
    - name: Run code coverage for all tests
      run: |
        pod install
        xcodebuild -workspace DeviceAuthenticator.xcworkspace -scheme "DeviceAuthenticatorFramework" -derivedDataPath CodeCov -destination "platform=iOS Simulator,OS=latest,name=iPhone 12" -enableCodeCoverage YES clean build test -quiet
        xcov -s DeviceAuthenticatorFramework -j CodeCov

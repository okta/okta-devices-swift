name: Okta Device Authenticator 

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  SampleApp:
    runs-on: macos-12
    steps:
    - uses: actions/checkout@v2
    - name: install pod
      run: cd Examples/PushSampleApp; pod install   
    - name: iOS Push Sample App
      run: xcodebuild -workspace ./Examples/PushSampleApp/SampleApp.xcworkspace -scheme "SampleApp" -destination "platform=iOS Simulator,OS=latest,name=iPhone 12" clean build
  Build:
    runs-on: macos-12
    steps:
    - uses: actions/checkout@v2
    - name: Install pod
      run: pod install
    - name: Build for testing and code cov
      run: set -o pipefail && xcodebuild -workspace DeviceAuthenticator.xcworkspace -scheme "DeviceAuthenticatorFramework" -destination "platform=iOS Simulator,OS=latest,name=iPhone 12" -derivedDataPath DerivedData build-for-testing | xcpretty
    - name: Upload products
      uses: actions/upload-artifact@v1
      with:
        name: Products
        path: DerivedData/Build/Products
  UnitTests:
    runs-on: macos-12
    needs: Build
    steps:
    - name: Checkout project
      uses: actions/checkout@v2
    - name: Download products
      uses: actions/download-artifact@v1
      with:
        name: Products
    - name: Unit Tests
      run: |
        mkdir -p DerivedData/Build
        mv ./Products ./DerivedData/Build
        set -o pipefail && xcodebuild -workspace DeviceAuthenticator.xcworkspace -scheme "DeviceAuthenticatorFramework" -destination "platform=iOS Simulator,OS=latest,name=iPhone 12" -derivedDataPath DerivedData test-without-building -only-testing:DeviceAuthenticatorUnitTests -enableCodeCoverage YES | xcpretty
    - name: Upload Test logs
      uses: actions/upload-artifact@v1
      with:
        name: UTLogs
        path: DerivedData/Logs/Test
  FunctionalTests:
    runs-on: macos-12
    needs: Build
    steps:
    - name: Checkout project
      uses: actions/checkout@v2
    - name: Download products
      uses: actions/download-artifact@v1
      with:
        name: Products
    - name: Functional Tests
      run: |
        mkdir -p DerivedData/Build
        mv ./Products ./DerivedData/Build
        set -o pipefail && xcodebuild -workspace DeviceAuthenticator.xcworkspace -scheme "DeviceAuthenticatorFramework" -destination "platform=iOS Simulator,OS=latest,name=iPhone 12" -derivedDataPath DerivedData test-without-building -only-testing:DeviceAuthenticatorFunctionalTests -enableCodeCoverage YES | xcpretty
    - name: Upload Test logs
      uses: actions/upload-artifact@v1
      with:
        name: FTLogs
        path: DerivedData/Logs/Test
  CodeCoverage:
    runs-on: macos-12
    needs: [UnitTests,FunctionalTests]
    steps:
    - name: Checkout project
      uses: actions/checkout@v2
    - name: Download Unit Tests Logs
      uses: actions/download-artifact@v1
      with:
        name: UTLogs
    - name: Download Functional Tests Logs
      uses: actions/download-artifact@v1
      with:
        name: FTLogs
    - name: Generate Code Coverage
      run: |
        gem install xcov
        mkdir -p DerivedData/Logs/Test
        cp -r ./UTLogs/* ./DerivedData/Logs/Test
        cp -r ./FTLogs/* ./DerivedData/Logs/Test
        xcov -s DeviceAuthenticatorFramework -j DerivedData
  SPM:
    runs-on: macos-12
    steps:
    - uses: actions/checkout@v2
    - name: Build Swift Package
      run: |
        swift build
  